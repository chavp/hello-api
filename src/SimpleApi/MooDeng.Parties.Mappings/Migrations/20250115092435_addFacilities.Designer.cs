// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MooDeng.Parties.Mappings;

#nullable disable

namespace MooDeng.Parties.Mappings.Migrations
{
    [DbContext(typeof(PartiesContext))]
    [Migration("20250115092435_addFacilities")]
    partial class addFacilities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("parties")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MooDeng.Parties.Models.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("FacilityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityTypeId");

                    b.HasIndex("Code", "FacilityTypeId")
                        .IsUnique();

                    b.ToTable("Facilities", "parties");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MooDeng.Parties.Models.FacilityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EffectiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FacilityRoleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForPartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("OfFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityRoleTypeId");

                    b.HasIndex("ForPartyId");

                    b.HasIndex("OfFacilityId");

                    b.ToTable("FacilityRoles", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.FacilityRoleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FacilityRoleTypes", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.FacilityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FacilityTypes", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Parties", "parties");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MooDeng.Parties.Models.PartyRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EffectiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartyRoleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("PartyRoleTypeId");

                    b.ToTable("PartyRoles", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.PartyRoleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("PartyRoleTypes", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.RelationshipParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EffectiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FromPartyRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("RelationshipPartyRoleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.Property<Guid?>("ToPartyRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromPartyRoleId");

                    b.HasIndex("RelationshipPartyRoleTypeId");

                    b.HasIndex("ToPartyRoleId");

                    b.ToTable("RelationshipParties", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.RelationshipPartyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Revision")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("RelationshipPartyTypes", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Land", b =>
                {
                    b.HasBaseType("MooDeng.Parties.Models.Facility");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToTable("Lands", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Animal", b =>
                {
                    b.HasBaseType("MooDeng.Parties.Models.Party");

                    b.ToTable("Animals", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Organization", b =>
                {
                    b.HasBaseType("MooDeng.Parties.Models.Party");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Organizations", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Person", b =>
                {
                    b.HasBaseType("MooDeng.Parties.Models.Party");

                    b.ToTable("People", "parties");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Facility", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityType");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.FacilityRole", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.FacilityRoleType", "FacilityRoleType")
                        .WithMany()
                        .HasForeignKey("FacilityRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MooDeng.Parties.Models.Party", "ForParty")
                        .WithMany()
                        .HasForeignKey("ForPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MooDeng.Parties.Models.Facility", "OfFacility")
                        .WithMany()
                        .HasForeignKey("OfFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityRoleType");

                    b.Navigation("ForParty");

                    b.Navigation("OfFacility");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.PartyRole", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MooDeng.Parties.Models.PartyRoleType", "PartyRoleType")
                        .WithMany()
                        .HasForeignKey("PartyRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("PartyRoleType");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.RelationshipParty", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.PartyRole", "FromPartyRole")
                        .WithMany()
                        .HasForeignKey("FromPartyRoleId");

                    b.HasOne("MooDeng.Parties.Models.RelationshipPartyType", "RelationshipPartyRoleType")
                        .WithMany()
                        .HasForeignKey("RelationshipPartyRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MooDeng.Parties.Models.PartyRole", "ToPartyRole")
                        .WithMany()
                        .HasForeignKey("ToPartyRoleId");

                    b.Navigation("FromPartyRole");

                    b.Navigation("RelationshipPartyRoleType");

                    b.Navigation("ToPartyRole");
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Land", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.Facility", null)
                        .WithOne()
                        .HasForeignKey("MooDeng.Parties.Models.Land", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Animal", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.Party", null)
                        .WithOne()
                        .HasForeignKey("MooDeng.Parties.Models.Animal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Organization", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.Party", null)
                        .WithOne()
                        .HasForeignKey("MooDeng.Parties.Models.Organization", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MooDeng.Parties.Models.Person", b =>
                {
                    b.HasOne("MooDeng.Parties.Models.Party", null)
                        .WithOne()
                        .HasForeignKey("MooDeng.Parties.Models.Person", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
